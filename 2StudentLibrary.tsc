class LibraryAccount {
    accountId: number;
    booksIssued: number;
    constructor(accountId: number, booksIssued: number) {
        this.accountId = accountId;
        this.booksIssued = booksIssued;
    }
    getLibraryInfo(): string {
        return `Library Account ID: ${this.accountId}, Books Issued: ${this.booksIssued}`;
    } }
class Student {
    name: string;
    studentId: number;
    grade: string;
    libraryAccount: LibraryAccount;
    constructor(name: string, studentId: number, grade: string, libraryAccount: LibraryAccount)
    {
        this.name = name;
        this.studentId = studentId;
        this.grade = grade;
        this.libraryAccount = libraryAccount;
}
    getDetails(): string {
        return `Student Name: ${this.name}, Student ID: ${this.studentId}, Grade:
        ${this.grade}`;
    }
    getLibraryDetails(): string {
        return this.libraryAccount.getLibraryInfo();
    }
}
class GraduateStudent extends Student {
    thesisTopic: string;
    constructor(name: string, studentId: number, grade: string, libraryAccount: LibraryAccount,thesisTopic: string) 
    {
        super(name, studentId, grade, libraryAccount);

        this.thesisTopic = thesisTopic;
    }
    getDetails(): string {
        return `${super.getDetails()}, Thesis Topic: ${this.thesisTopic}`;
    }
}
const studentLibraryAccount = new LibraryAccount(1001, 3);
const student = new Student("Shivam", 41, "A++", studentLibraryAccount);
console.log(student.getDetails());
console.log(student.getLibraryDetails());
const gradStudent = new GraduateStudent("Akhilesh",20,"A+", studentLibraryAccount, "AI in Healthcare");
console.log(gradStudent.getDetails());
console.log(gradStudent.getLibraryDetails());
